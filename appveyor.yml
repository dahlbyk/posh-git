os:
  - "WMF 5"

environment:
  CA_KEY:
    secure: JQtUaB+zduPID8bzI5nfHRc2V6xYJiJp4mTHkE4W6broH8rznT1ypvn5orQ6YcGn

branches:
  only:
    - master
    - v0

init:
  - git config --global core.autocrlf true

install:
  - ps: |
      Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force | Out-Null
      Install-Module Pester -MinimumVersion 5.0.0 -MaximumVersion 5.99.99 -Scope CurrentUser -Force | Out-Null
      "Git version: $(git.exe --version)"
      "PSVersion:   $($PSVersionTable.PSVersion), build: $($PSVersionTable.BuildVersion), clr version: $($PSVersionTable.ClrVersion)"
      "Host name:   $($Host.Name)"

build: false

before_test:
  - ps: Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
  - ps: Install-Module Coveralls -MinimumVersion 1.0.5 -Scope CurrentUser
  - ps: Import-Module Coveralls

test_script:
  - ps: |
      $testResultsFile = Join-Path $Env:APPVEYOR_BUILD_FOLDER TestResults.xml

      Import-Module Pester -PassThru

      $configuration = [PesterConfiguration]::Default
      $configuration.Run.Path = "$Env:APPVEYOR_BUILD_FOLDER\test"
      $configuration.Run.PassThru = $true
      $configuration.Output.Verbosity = "Detailed"
      $configuration.TestResult.Enabled = $true
      $configuration.TestResult.OutputFormat = "NUnit2.5"
      $configuration.TestResult.OutputPath = $testResultsFile
      $configuration.CodeCoverage.Enabled = $true
      $configuration.CodeCoverage.Path = (gci .\src\* -include *.ps1,*.psm1)

      $res = Invoke-Pester -Configuration $configuration -ErrorAction SilentlyContinue
      if (Test-Path $testResultsFile) {
          (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", $testResultsFile)
      }
      if (!$res -or ($res.FailedCount -gt 0)) {
          # Terminate the script to fail the build
          $Error | Format-List * -Force
          exit 1;
      }
      $ErrorActionPreference = 'Stop'
      if (!(Test-Path Env:CA_KEY)) {
          Write-Host 'CA_KEY not set! (Expected on PR builds.)'
          return;
      }
      Write-Host 'Skipping coverage; anyone know how to fix?'
      Write-Host '"Please provide pester results with code coverage using the -CodeCoverage parameter"'
      # $coverageResult = Format-Coverage -PesterResults $res -CoverallsApiToken $ENV:CA_KEY -BranchName $ENV:APPVEYOR_REPO_BRANCH
      # Publish-Coverage -Coverage $coverageResult
